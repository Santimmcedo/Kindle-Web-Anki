name: Build and Deploy Anki Deck to GitHub Pages

on:
  workflow_dispatch: # Permite iniciar manualmente
  schedule:
    - cron: '0 */12 * * *' # Roda a cada 12 horas

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      # --- NOVO PASSO DE DEPURAÇÃO ---
      - name: Check for Secrets
        run: |
          if [ -z "${{ secrets.ANKIWEB_USERNAME }}" ]; then
            echo "ERRO: O secret ANKIWEB_USERNAME NÃO foi encontrado."
          else
            echo "SUCESSO: O secret ANKIWEB_USERNAME foi encontrado."
          fi
          if [ -z "${{ secrets.ANKIWEB_PASSWORD }}" ]; then
            echo "ERRO: O secret ANKIWEB_PASSWORD NÃO foi encontrado."
          else
            echo "SUCESSO: O secret ANKIWEB_PASSWORD foi encontrado."
          fi
          if [ -z "${{ secrets.DECK_NAME }}" ]; then
            echo "ERRO: O secret DECK_NAME NÃO foi encontrado."
          else
            echo "SUCESSO: O secret DECK_NAME foi encontrado."
          fi

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run exporter script
        run: python anki_exporter.py
        env:
          ANKIWEB_USERNAME: ${{ secrets.ANKIWEB_USERNAME }}
          ANKIWEB_PASSWORD: ${{ secrets.ANKIWEB_PASSWORD }}
          DECK_NAME: ${{ secrets.DECK_NAME }}
      
      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

