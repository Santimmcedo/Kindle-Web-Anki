# Nome do fluxo de trabalho
name: Build and Deploy Anki Deck to GitHub Pages

# Gatilhos: Quando este fluxo vai rodar
on:
  # Permite que você rode manualmente pela aba "Actions" do GitHub
  workflow_dispatch:
  
  # Roda em um cronograma (schedule)
  # Este exemplo roda a cada 12 horas. Use https://crontab.guru/ para customizar.
  schedule:
    - cron: '0 */12 * * *'

# Permissões necessárias para o job poder publicar no GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Define o que acontece quando o fluxo roda
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # O robô vai usar um ambiente Linux
    
    steps:
      # 1. Clona o seu repositório para o ambiente do robô
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Configura o ambiente Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # 3. Instala as dependências Python listadas no requirements.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      # 4. Roda o script principal para baixar, extrair e gerar o HTML
      - name: Run Anki Exporter
        env:
          ANKIWEB_USERNAME: ${{ secrets.ANKIWEB_USERNAME }}
          ANKIWEB_PASSWORD: ${{ secrets.ANKIWEB_PASSWORD }}
          DECK_NAME: ${{ secrets.DECK_NAME }}
        run: python anki_exporter.py

      # 5. Configura o GitHub Pages para a publicação
      - name: Setup Pages
        uses: actions/configure-pages@v4

      # 6. Faz o upload do artefato (a pasta 'public' com o index.html)
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './public'
          
      # 7. Publica o artefato no GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
